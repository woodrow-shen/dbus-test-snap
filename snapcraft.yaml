name: dbus-test-snap # you probably want to 'snapcraft register <name>'
base: core20 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Snap to demonstrate DBus # 79 char long summary
description: |
  This snap contain server and client application which will communicate with
  each other over DBus.
  Client will send two decimal number and server will do addition operation on
  those number and send the result to client.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

slots:
  dbus-server-slot:
    interface: dbus
    bus: session
    name: in.softprayog.add_server
  dbus-client-slot:
    interface: dbus
    bus: session
    name: in.softprayog.add_client

plugs:
  dbus-server-plug:
    interface: dbus
    bus: session
    name: in.softprayog.add_server

apps:
  server:
    command: bin/server
    slots: [dbus-server-slot]

  client:
    command: bin/client
    slots: [dbus-client-slot]
    plugs: [dbus-server-plug]

parts:
  dbus-server-client:
    plugin: nil
    source: .
    override-build: |
        make clean;make
        cp server client ${SNAPCRAFT_PART_INSTALL}
        cp in.softprayog.add_server.service ${SNAPCRAFT_PART_INSTALL}
    organize:
        server: bin/server
        client: bin/client
        in.softprayog.add_server.service: usr/share/dbus-1/services/in.softprayog.add_server.service
